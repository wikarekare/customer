#!/usr/local/bin/ruby
require 'wikk_configuration'
require 'wikk_sql'
require 'optparse'
require 'optparse/time'


unless defined? WIKK_CONF
  load '/wikk/etc/wikk.conf'
end
require_relative "#{RLIB}/customer/customer.rb"

VERSION = '1.1.0'

def parse_args(argv: ARGV)
  options = {
    debug: false,
    update: false,
    argv: []
  }
  required = [ :site, :date ]

  begin
    @opt_parser = OptionParser.new(ARGV) do |opts|
      opts.banner = "Usage: #{$PROGRAM_NAME} [options]"

      opts.on('--site=SITE', String, 'Terminate customer site') do |site|
        options[:site] = site
      end

      opts.on('--date=DATE', String, 'Termination date') do |date|
        options[:date] = date
      end

      # No argument, shows at tail.  This will print an options summary.
      opts.on_tail('-h', '--help', 'Show this message') do
        puts opts
        exit
      end

      # Another typical switch to print the version.
      opts.on_tail('-v', '--version', 'Show version') do
        puts VERSION
        exit
      end
    end
    @opt_parser.parse! argv

    required.each do |switch|
      if options[switch].nil?
        usage
        exit(-1)
      end
    end
  rescue OptionParser::InvalidArgument => e
    puts e
    usage
    exit(-1)
  end
  options[:argv] = argv # Any trailing arguments
  return options
end

def usage
  warn @opt_parser.to_s
end

args = parse_args # default to ARGV
if args[:argv].length > 0
  usage
  exit(-1)
end

@mysql_conf = WIKK::Configuration.new(MYSQL_CONF)
WIKK::SQL.connect(@mysql_conf) do |sql_fd|
  set_customer_inactive(sql: sql_fd, site_name: args[:site], termination_date: args[:date])
end
